var periscope = include('periscope')


var pscope_add = func() -> Null {

    assert(25 + 70 == 95)
    assert(90 + 79 == 169)
    assert(51 + 88 == 139)

    return(Null)
}


var pscope_sub = func() -> Null {

    assert(86 - 38 == 48)
    assert(81 - 68 == 13)
    assert(73 - 81 == -8)

    return(Null)
}


var pscope_mul = func() -> Null {

    assert(53 * 54 == 2862)
    assert(29 * 73 == 2117)
    assert(20 * 55 == 1100)

    return(Null)
}


var pscope_div = func() -> Null {

    assert(74 / 56 == 1)
    assert(27 / 5 == 5)
    assert(76 / 6 == 12)

    var try = handler {10 / 0}
    assert(try.name == 'OperationException')

    return(Null)
}


var pscope_pow = func() -> Null {

    assert(3 ^ 4 == 81)
    assert(4 ^ 4 == 256)
    assert(9 ^ 7 == 4782969)

    return(Null)
}


var pscope_equals = func() -> Null {

    assert(8 == 3 == False)
    assert(5 == 5 == True)
    assert(3 == 8 == False)

    return(Null)
}


var pscope_notequals = func() -> Null {

    assert(8 != 3 == True)
    assert(5 != 5 == False)
    assert(3 != 8 == True)

    return(Null)
}


var pscope_lessthan = func() -> Null {

    assert(8 < 3 == False)
    assert(5 < 5 == False)
    assert(3 < 8 == True)

    return(Null)
}


var pscope_ltequals = func() -> Null {

    assert(8 <= 3 == False)
    assert(5 <= 5 == True)
    assert(3 <= 8 == True)

    return(Null)
}


var pscope_greaterthan = func() -> Null {

    assert(8 > 3 == True)
    assert(5 > 5 == False)
    assert(3 > 8 == False)

    return(Null)
}


var pscope_gtequals = func() -> Null {

    assert(8 >= 3 == True)
    assert(5 >= 5 == True)
    assert(3 >= 8 == False)

    return(Null)
}


var pscope_and = func() -> Null {

    var try = handler {10 and 10.0}
    assert(try.name == 'TypeException')

    return(Null)
}


var pscope_or = func() -> Null {

    var try = handler {10 or 10.0}
    assert(try.name == 'TypeException')

    return(Null)
}


var pscope_not = func() -> Null {

    var try = handler {not 10}
    assert(try.name == 'TypeException')

    return(Null)
}


var pscope_call = func() -> Null {

    var try = handler {10()}
    assert(try.name == 'TypeException')

    return(Null)
}


var pscope_tostr = func() -> Null {

    assert(str(6) == '6')
    assert(str(45) == '45')
    assert(str(76) == '76')

    return(Null)
}


var pscope_toint = func() -> Null {

    var try = handler {int(10)}
    assert(try.name == 'TypeException')

    return(Null)
}


var pscope_tofloat = func() -> Null {

    assert(float(94) == 94.0)
    assert(float(28) == 28.0)
    assert(float(78) == 78.0)

    return(Null)
}


var pscope_tobool = func() -> Null {

    var try = handler {bool(10)}
    assert(try.name == 'TypeException')

    return(Null)
}


var pscope_toarray = func() -> Null {

    var try = handler {array(10)}
    assert(try.name == 'TypeException')

    return(Null)
}


var pscope_totuple = func() -> Null {

    var try = handler {tuple(10)}
    assert(try.name == 'TypeException')

    return(Null)
}


var pscope_indicie = func() -> Null {

    var try = handler {10[0]}
    assert(try.name == 'TypeException')

    return(Null)
}


var pscope_attribute = func() -> Null {

    assert(10.as_ratio() == (10, 1))

    var try = handler {10.attribute}
    assert(try.name == 'AttributeException')

    return(Null)
}
